// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solution.Server;

namespace Solution.Server.Migrations
{
    [DbContext(typeof(ApplicationContextDb))]
    [Migration("20210611102317_user")]
    partial class user
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Solution.Shared.Address", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Solution.Shared.BankDetails", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GID");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("Solution.Shared.Bookings", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deposit")
                        .HasColumnType("bit");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GID");

                    b.HasIndex("ClientGID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Solution.Shared.Client", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Solution.Shared.Profile", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankDetailsGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("GID");

                    b.HasIndex("AddressGID");

                    b.HasIndex("BankDetailsGID");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Solution.Shared.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 6, 11, 12, 23, 17, 533, DateTimeKind.Local).AddTicks(361),
                            DescriptionType = "Admin",
                            Updated = new DateTime(2021, 6, 11, 12, 23, 17, 533, DateTimeKind.Local).AddTicks(9022)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 6, 11, 12, 23, 17, 535, DateTimeKind.Local).AddTicks(731),
                            DescriptionType = "Manager",
                            Updated = new DateTime(2021, 6, 11, 12, 23, 17, 535, DateTimeKind.Local).AddTicks(741)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 6, 11, 12, 23, 17, 535, DateTimeKind.Local).AddTicks(832),
                            DescriptionType = "Artist",
                            Updated = new DateTime(2021, 6, 11, 12, 23, 17, 535, DateTimeKind.Local).AddTicks(833)
                        });
                });

            modelBuilder.Entity("Solution.Shared.Users", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("GID");

                    b.HasIndex("ProfileGID");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Solution.Shared.Bookings", b =>
                {
                    b.HasOne("Solution.Shared.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientGID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Solution.Shared.Profile", b =>
                {
                    b.HasOne("Solution.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressGID");

                    b.HasOne("Solution.Shared.BankDetails", "BankDetails")
                        .WithMany()
                        .HasForeignKey("BankDetailsGID");

                    b.Navigation("Address");

                    b.Navigation("BankDetails");
                });

            modelBuilder.Entity("Solution.Shared.Users", b =>
                {
                    b.HasOne("Solution.Shared.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileGID");

                    b.HasOne("Solution.Shared.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Profile");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
